foo:after {
foo::first-letter {

foo.bar {

foo#bar {

#foo > .bar:hover:after {

span,
div {

div > p,
.css-li ~ .css-li,
.previous-selector + .selector,
.selected || td {

----------------------------------------------------

[
	["selector", [
		"foo",
		["pseudo-element", ":after"]
	]], ["punctuation", "{"],

	["selector", [
		"foo",
		["pseudo-element", "::first-letter"]
	]], ["punctuation", "{"],

	["selector", [
		"foo",
		["class", ".bar"]
	]], ["punctuation", "{"],

	["selector", [
		"foo",
		["id", "#bar"]
	]], ["punctuation", "{"],

	["selector", [
		["id", "#foo"],
		["combinator", ">"],
		["class", ".bar"],
		["pseudo-class", ":hover"],
		["pseudo-element", ":after"]
	]], ["punctuation", "{"],

	["selector", [
		"span",
		["punctuation", ","],
		"\r\ndiv"
	]], ["punctuation", "{"],

	["selector", [
		"div ",
		["combinator", ">"],
		" p",
		["punctuation", ","],
		["class", ".css-li"],
		["combinator", "~"],
		["class", ".css-li"],
		["punctuation", ","],
		["class", ".previous-selector"],
		["combinator", "+"],
		["class", ".selector"],
		["punctuation", ","],
		["class", ".selected"],
		["combinator", "||"],
		" td"
	]], ["punctuation", "{"]
]

----------------------------------------------------

Checks for pseudo-elements, pseudo-classes, classes and ids inside selectors.
